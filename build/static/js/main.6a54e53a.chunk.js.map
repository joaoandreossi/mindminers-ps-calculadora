{"version":3,"sources":["Components/App/EntriesAPI/EntriesAPI.js","Components/App/Header/Header.js","Components/App/LineSelection/LineSelection.js","Components/App/Menu/Menu.js","Components/App/DefaultMessage/DefaultMessage.js","Components/FormView/PopupConfirmation/PopupConfirmation.js","Components/FormView/PopupError/PopupError.js","Components/FormView/InputDate/InputDate.js","Components/FormView/InputRegular/InputRegular.js","Components/FormView/InputDropdown/Icons/expand.svg","Components/FormView/InputDropdown/Icons/collapse.svg","Components/FormView/InputDropdown/InputDropdown.js","Components/FormView/ButtonSubmit/ButtonSubmit.js","Components/FormView/Form/Form.js","Components/HistoryView/EntriesGroup/EntriesGroup.js","Components/GraphView/ChartView/ChartView.js","Components/GraphView/Graph/Graph.js","Components/HistoryView/EntriesCard/Icons/icon-trash.svg","Components/HistoryView/EntriesCard/EntriesCard.js","Components/HistoryView/History/History.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["EntriesAPI","this","db","prototype","addNewOperation","operation","type","addNewBuyOperation","addNewSellOperation","removeOperation","name","id","hasOwnProperty","numberOfOperations","Object","keys","year","forEach","filter","op","length","recalculateValuesRetroactively","print","console","log","getOperationById","targetOp","Error","getStockNumberOfEntries","years","entriesNum","getAllEntries","stocks","entries","stock","push","obj","code","date","getFullYear","price","quantity","tax","pm","qm","ra","pa","salesTax","getOwnPropertyNames","resetValues","sort","a","b","calculatePM","calculateBuyQM","updateValuesFromBuyOperation","calculateRA","calculateSellQM","calculateNegativePA","calculateTax","calculatePositivePA","updateValuesFromSellOperation","pc","qc","tc","qv","pv","tv","Math","min","abs","Header","className","LineSelection","props","position","Menu","useState","linePosition","setLinePosition","setLineSelectorPosition","tab","getTabSelectionFromChild","highlightSelectedTab","button","i","parentNode","children","classList","contains","remove","add","onClick","e","target","dataset","data-id","DefaultMessage","PopupConfirmation","PopupError","message","InputDate","toggleCalendar","setToggleCalendar","Date","dateValue","setDateValue","parseDate","toLocaleDateString","day","month","useEffect","getInputValueFromChild","placeholder","value","readOnly","onChange","onClickDay","setTimeout","InputRegular","setValue","parseFloat","parseInt","onBlur","string","regexMatchComma","regexMatchAllBeforeNumber","replace","toString","isNaN","InputDropdown","ArrowDown","icon","setIcon","menuToggle","setMenuToggle","selection","setSelection","ArrowUp","document","querySelector","src","alt","ButtonSubmit","disabled","getNewOperationFromChild","resetState","Form","setDate","setCode","setType","setPrice","setQuantity","setTax","setOperation","key","setKey","component","toUpperCase","json","operationId","integer","EntriesGroup","operationNumber","ChartView","values","currentYear","setCurrentYear","chartRatio","undefined","chart","setChart","canvas","useRef","initChart","Chart","current","getContext","data","labels","datasets","backgroundColor","borderColor","borderWidth","fill","options","responsive","maintainAspectRatio","aspectRatio","window","innerWidth","innerHeight","legend","display","tooltips","callbacks","label","tooltipItem","yLabel","toFixed","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","update","innerHTML","menuOptions","handleMenuRender","ref","Graph","currentList","setCurrentList","listSize","setListSize","setSalesTax","activeTab","render","entry","getMonth","getTaxValues","numberEntries","handleRender","EntriesCard","handleClick","handleDeletion","title","TrashIcon","History","getDay","App","entriesAPI","setActiveTab","setId","setNumberOfOperations","toggleConfirmationPopup","setToggleConfirmationPopup","toggleErrorPopup","setToggleErrorPopup","errorMessage","setErrorMessage","setEntries","getEntryNumber","dataFromTabChild","dataFromStockFormChild","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a54e53a.chunk.js","sourcesContent":["const EntriesAPI = function(){\r\n    this.db = {}\r\n}\r\n\r\nEntriesAPI.prototype.addNewOperation = function(operation){\r\n    if(operation.type === 'Compra'){\r\n        addNewBuyOperation(this.db, operation)\r\n    } else {\r\n        addNewSellOperation(this.db, operation)\r\n    }\r\n}\r\n\r\nEntriesAPI.prototype.removeOperation = function(name, id){\r\n    if(!this.db.hasOwnProperty(name)){\r\n\r\n        return false\r\n\r\n    } if(this.numberOfOperations() === 0){\r\n\r\n        return false\r\n\r\n    } else {\r\n\r\n        let years = Object.keys(this.db[name].year)\r\n        years.forEach(year => {\r\n            this.db[name].year[year] = this.db[name].year[year].filter(op => op.id !== id)\r\n\r\n            if(Object.keys(this.db[name].year[year]).length === 0){\r\n                delete this.db[name].year[year]\r\n            }\r\n        })\r\n        \r\n        if(Object.keys(this.db[name].year).length === 0){\r\n            delete this.db[name]\r\n        } else {\r\n            recalculateValuesRetroactively(this.db, name)\r\n        }\r\n    }\r\n}\r\n\r\nEntriesAPI.prototype.print = function(){\r\n    console.log(this)\r\n}\r\n\r\nEntriesAPI.prototype.getOperationById = function(name, id){\r\n    console.log('getbyid')\r\n    if(!this.db.hasOwnProperty(name)){\r\n\r\n        throw new Error('Não existe nenhuma ação com esse código.')\r\n\r\n    } else {\r\n\r\n        let years = Object.keys(this.db[name].year)\r\n        let targetOp\r\n\r\n        years.forEach(year => {\r\n\r\n            targetOp = this.db[name].year[year].filter(op => op.id === id)\r\n\r\n        })\r\n\r\n        return targetOp[0]\r\n    }\r\n}\r\n\r\nEntriesAPI.prototype.getStockNumberOfEntries = function(name){\r\n    if(Object.keys(this.db).length === 0){\r\n        return 0\r\n    } else {\r\n        let years = Object.keys(this.db[name].year)\r\n        let entriesNum = 0\r\n\r\n        years.forEach(year => {\r\n            entriesNum = entriesNum + this.db[name].year[year].length\r\n        })\r\n\r\n        return entriesNum\r\n    }\r\n}\r\n\r\nEntriesAPI.prototype.getAllEntries = function(){\r\n    if(Object.keys(this.db).length === 0){\r\n        return {}\r\n    } else {\r\n        let stocks = Object.keys(this.db)\r\n        let entries = {}\r\n\r\n        stocks.forEach(stock => {\r\n            let years = Object.keys(this.db[stock].year)\r\n            entries[stock] = []\r\n            years.forEach(year => \r\n                this.db[stock].year[year].forEach(op =>\r\n                    entries[stock].push(op)\r\n                )\r\n            )\r\n        })\r\n        return entries\r\n    }\r\n}\r\n\r\nEntriesAPI.prototype.numberOfOperations = function(){\r\n    let entries = this.getAllEntries()\r\n    let stocks = Object.keys(entries)\r\n    let numberOfOperations = 0\r\n\r\n    stocks.forEach(stock => {\r\n        numberOfOperations = numberOfOperations + entries[stock].length\r\n    })\r\n\r\n    return numberOfOperations\r\n}\r\n\r\nconst addNewBuyOperation = (obj, operation) => {\r\n    if(!obj.hasOwnProperty(operation.code)){\r\n\r\n        obj[operation.code] = {\r\n            pm: 0,\r\n            qm: 0,\r\n            ra: 0,\r\n            pa: 0,\r\n            year: {\r\n                [operation.date.getFullYear()]: [\r\n                    {\r\n                        id: operation.id,\r\n                        code: operation.code,\r\n                        date: operation.date,\r\n                        type: operation.type,\r\n                        price: operation.price,\r\n                        quantity: operation.quantity,\r\n                        tax: operation.tax\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        recalculateValuesRetroactively(obj, operation.code)\r\n\r\n    } else {\r\n\r\n        if(!obj[operation.code].year.hasOwnProperty(operation.date.getFullYear())){\r\n\r\n            obj[operation.code].year[operation.date.getFullYear()] = [\r\n                {\r\n                    id: operation.id,\r\n                    code: operation.code,\r\n                    date: operation.date,\r\n                    type: operation.type,\r\n                    price: operation.price,\r\n                    quantity: operation.quantity,\r\n                    tax: operation.tax\r\n                }\r\n            ]\r\n\r\n            recalculateValuesRetroactively(obj, operation.code)\r\n\r\n        } else {\r\n\r\n            obj[operation.code].year[operation.date.getFullYear()].push({\r\n                id: operation.id,\r\n                code: operation.code,\r\n                date: operation.date,\r\n                type: operation.type,\r\n                price: operation.price,\r\n                quantity: operation.quantity,\r\n                tax: operation.tax\r\n            })\r\n\r\n            recalculateValuesRetroactively(obj, operation.code)\r\n        }\r\n    }\r\n}\r\n\r\nconst addNewSellOperation = (obj, operation) => {\r\n    if(!obj.hasOwnProperty(operation.code)){\r\n\r\n        throw new Error('Não existem ações com esse código.')\r\n\r\n    } else if(obj[operation.code].qm < operation.quantity){\r\n\r\n        throw new Error('Não é possível vender mais do que a quantidade existente.')\r\n\r\n    } else {\r\n\r\n        if(!obj[operation.code].year.hasOwnProperty(operation.date.getFullYear())){\r\n\r\n            obj[operation.code].year[operation.date.getFullYear()] = [\r\n                {\r\n                    id: operation.id,\r\n                    code: operation.code,\r\n                    date: operation.date,\r\n                    type: operation.type,\r\n                    price: operation.price,\r\n                    quantity: operation.quantity,\r\n                    tax: operation.tax,\r\n                    salesTax: 0\r\n                }\r\n            ]\r\n\r\n            recalculateValuesRetroactively(obj, operation.code)\r\n\r\n        } else {\r\n\r\n            obj[operation.code].year[operation.date.getFullYear()].push({\r\n                id: operation.id,\r\n                code: operation.code,\r\n                date: operation.date,\r\n                type: operation.type,\r\n                price: operation.price,\r\n                quantity: operation.quantity,\r\n                tax: operation.tax,\r\n                salesTax: 0\r\n            })\r\n\r\n            recalculateValuesRetroactively(obj, operation.code)\r\n        }\r\n    }\r\n}\r\n\r\nconst updateValuesFromBuyOperation = (obj, operation) => {\r\n    obj[operation.code].pm = calculatePM(obj[operation.code].pm, obj[operation.code].qm, operation.price, operation.quantity, operation.tax)\r\n    obj[operation.code].qm = calculateBuyQM(obj[operation.code].qm, operation.quantity)\r\n}\r\n\r\nconst updateValuesFromSellOperation = (obj, operation) => {\r\n    obj[operation.code].ra = calculateRA(obj[operation.code].pm, operation.price, operation.quantity, operation.tax)\r\n    obj[operation.code].qm = calculateSellQM(obj[operation.code].qm, operation.quantity) \r\n\r\n    if(obj[operation.code].ra < 0) {\r\n        obj[operation.code].pa = calculateNegativePA(obj[operation.code].pa, obj[operation.code].ra)\r\n    } else {\r\n        operation.salesTax = calculateTax(obj[operation.code].ra, obj[operation.code].pa)\r\n        obj[operation.code].pa = calculatePositivePA(obj[operation.code].pa, obj[operation.code].ra)\r\n    }\r\n}\r\n\r\nconst recalculateValuesRetroactively = (obj, name) => {\r\n    console.log(obj)\r\n    console.log(name)\r\n    if(!obj.hasOwnProperty(name)){\r\n        throw new Error('Não existe nenhuma ação com esse código.')\r\n    } else {\r\n        const years = Object.getOwnPropertyNames(obj[name].year)\r\n        resetValues(obj, name)\r\n        years.forEach(year => {\r\n            let sortedOperations = obj[name].year[year].sort((a,b) => a.date - b.date)\r\n            sortedOperations.forEach(op => {\r\n                if(op.type === 'Compra'){\r\n                    updateValuesFromBuyOperation(obj, op)\r\n                } else {\r\n                    updateValuesFromSellOperation(obj, op)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nconst resetValues = (obj, name) => {\r\n    if(!obj.hasOwnProperty(name)){\r\n        throw new Error('Não existe nenhuma ação com esse código.')\r\n    } else {\r\n        obj[name].pm = 0\r\n        obj[name].qm = 0\r\n        obj[name].ra = 0\r\n        obj[name].pa = 0\r\n    }\r\n}\r\n\r\nconst calculatePM = (pm, qm, pc, qc, tc) => {\r\n    return (pm * qm + pc * qc + tc) / (qm + qc)\r\n}\r\n\r\nconst calculateBuyQM = (qm, qv) => {\r\n    return qm + qv\r\n}\r\n\r\nconst calculateSellQM = (qm, qv) => {\r\n    return qm - qv\r\n}\r\n\r\nconst calculateRA = (pm, pv, qv, tv) => {\r\n    return (pv - pm) * qv - tv\r\n}\r\n\r\nconst calculateNegativePA = (pa, ra) => {\r\n    return pa + ra\r\n}\r\n\r\nconst calculatePositivePA = (pa, ra) => {\r\n    return pa - Math.min(ra, pa)\r\n}\r\n\r\nconst calculateTax = (ra, pa) => {\r\n    return (ra - Math.abs(Math.min(ra, pa))) * 0.15\r\n}\r\n\r\nexport default EntriesAPI","import './Header.css'\r\n\r\nfunction Header(){\r\n    return (\r\n        <header className='header'>\r\n            <h1 className='header__title'>Calculadora</h1>\r\n            <p className='header__description'>Registre sua operação de compra ou venda e lhe diremos quanto de imposto você deve pagar.</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import './LineSelection.css'\r\n\r\nfunction LineSelection(props) {\r\n    return (\r\n        <div className='line'>\r\n            <div className={`${props.position} line__selector`}></div>\r\n            <div className='line__thin'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineSelection","import { useState} from 'react'\r\nimport LineSelection from '../LineSelection/LineSelection'\r\nimport './Menu.css'\r\n\r\nfunction Menu(props) {\r\n    const [linePosition, setLinePosition] = useState('line__selector--position-start')\r\n\r\n    const handleTabChange = (button) => {\r\n        setLineSelectorPosition(button.dataset.id)\r\n        highlightSelectedTab(button)\r\n    }\r\n\r\n    const setLineSelectorPosition = (tab) => {\r\n        switch(tab){\r\n            case '0':\r\n                setLinePosition('line__selector--position-start')\r\n                props.getTabSelectionFromChild(0)\r\n                break\r\n            case '1':\r\n                setLinePosition('line__selector--position-mid')\r\n                props.getTabSelectionFromChild(1)\r\n                break\r\n            case '2':\r\n                setLinePosition('line__selector--position-end')\r\n                props.getTabSelectionFromChild(2)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const highlightSelectedTab = (button) => {\r\n        for(let i = 0; i < button.parentNode.children.length; i++){\r\n            if(button.parentNode.children[i].classList.contains('menu__button--selected')){\r\n                button.parentNode.children[i].classList.remove('menu__button--selected')\r\n            } \r\n        }\r\n\r\n        button.classList.add('menu__button--selected')\r\n    }\r\n\r\n    return (\r\n        <div className='menu'>\r\n            <div className='menu__button-container' onClick={(e) => handleTabChange(e.target)}>\r\n                <button className='menu__button menu__button--selected' data-id='0'>Nova operação</button>\r\n                <button className='menu__button' data-id='1'>Gráfico</button>\r\n                <button className='menu__button' data-id='2'>Histórico</button>\r\n            </div>\r\n            <LineSelection position={linePosition}></LineSelection>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Menu","import './DefaultMessage.css'\r\n\r\nfunction DefaultMessage(){\r\n    return(\r\n        <div className='default-message'>\r\n            Oops! Parece que não há nada aqui.\r\n            <br></br>\r\n            Adicione uma operação para continuar.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DefaultMessage","import './PopupConfirmation.css'\r\n\r\nfunction PopupConfirmation() {\r\n    return (\r\n        <div className='popup-confirmation'>Operação registrada!</div>\r\n    )\r\n}\r\n\r\nexport default PopupConfirmation","import './PopupError.css'\r\n\r\nfunction PopupError(props) {\r\n    return (\r\n        <div className='popup-error'>Erro!<br></br>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default PopupError","import { useState, useEffect } from 'react'\r\nimport Calendar from 'react-calendar'\r\n\r\nimport './InputDate.css'\r\nimport './Calendar.css'\r\n\r\nfunction InputDate(props) {\r\n    const [toggleCalendar, setToggleCalendar] = useState(false)\r\n    const [dateValue, setDateValue] = useState(new Date())\r\n\r\n    //this is necessary otherwise the calendar closes before updating the date\r\n    const hideCalendar = () => {\r\n        parseDate(dateValue)\r\n        setTimeout(() => {setToggleCalendar(!toggleCalendar)}, 10)\r\n    }\r\n\r\n    const parseDate = () => {\r\n        const options = {day: 'numeric', month: 'numeric', year: 'numeric'}\r\n        return dateValue.toLocaleDateString('pt-BR', options)\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.getInputValueFromChild(props.name, dateValue)\r\n    }, [dateValue, props])\r\n\r\n    return (\r\n        <div className='input-date'>\r\n            <input \r\n                className='input-date__input' \r\n                placeholder={props.placeholder} \r\n                type='text' \r\n                onClick={() => setToggleCalendar(!toggleCalendar)} \r\n                value={parseDate()} \r\n                readOnly\r\n            ></input>\r\n\r\n            {toggleCalendar && \r\n                <Calendar onChange={setDateValue} onClickDay={hideCalendar}></Calendar>\r\n            }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputDate","import { useState, useEffect } from 'react'\r\nimport './InputRegular.css'\r\n\r\nfunction InputRegular(props) {\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleInput = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const validateInput = () => {\r\n        let string = value\r\n        const regexMatchComma = /[,]/g\r\n        const regexMatchAllBeforeNumber = /^[^0-9]*/\r\n\r\n        if(props.name === 'code') {\r\n            setValue(string)\r\n        } else if(props.name === 'price' && string !== ''){\r\n            string = string.replace(regexMatchComma, '.').replace(regexMatchAllBeforeNumber, '')\r\n            string = parseFloat(string).toString()\r\n            isNaN(string) ? setValue('') : setValue(string)\r\n        }  else if(props.name === 'tax' && string !== ''){\r\n            string = string.replace(regexMatchComma, '.').replace(regexMatchAllBeforeNumber, '')\r\n            string = parseFloat(string).toString()\r\n            isNaN(string) ? setValue('') : setValue(string)\r\n        } else if(props.name === 'quantity' && string !== ''){\r\n            string = string.replace(regexMatchComma, '.').replace(regexMatchAllBeforeNumber, '')\r\n            string = parseInt(string).toString()\r\n            isNaN(string) ? setValue('') : setValue(string)\r\n        }\r\n    }\r\n\r\n    const parseValueBeforeSending = () => {\r\n        if(props.name === 'price'){\r\n            return parseFloat(value)\r\n        } else if (props.name === 'tax'){\r\n            return parseFloat(value)\r\n        } else if (props.name === 'quantity'){\r\n            return parseInt(value)\r\n        } else {\r\n            return value\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.getInputValueFromChild(props.name, parseValueBeforeSending())\r\n        \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value, props])\r\n\r\n    return (\r\n        <div className='input-regular'>\r\n            <input className='input-regular__input' placeholder={props.placeholder} type='text' onChange={handleInput} value={value} onBlur={validateInput}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputRegular","export default __webpack_public_path__ + \"static/media/expand.2b95325f.svg\";","export default __webpack_public_path__ + \"static/media/collapse.29b48edf.svg\";","import { useState, useEffect } from 'react'\r\n\r\nimport ArrowDown from './Icons/expand.svg'\r\nimport ArrowUp from './Icons/collapse.svg'\r\n\r\nimport './InputDropdown.css'\r\n\r\nfunction InputDropdown(props) {\r\n    const [icon, setIcon] = useState(ArrowDown)\r\n    const [menuToggle, setMenuToggle] = useState(false)\r\n    const [selection, setSelection] = useState('')\r\n\r\n    const toggleDropdown = () => {\r\n        if(icon === ArrowDown){\r\n            setIcon(ArrowUp)\r\n            setMenuToggle(true)\r\n\r\n            document.querySelector('[data-id=\"dropdown-icon\"]').classList.remove('input-dropdown__icon--menuclosed')\r\n            document.querySelector('[data-id=\"dropdown-icon\"]').classList.add('input-dropdown__icon--menuopened')\r\n\r\n            document.querySelector('.input-dropdown').classList.remove('input-dropdown--menuclosed')\r\n            document.querySelector('.input-dropdown').classList.add('input-dropdown--menuopened')\r\n\r\n        } else {\r\n            setIcon(ArrowDown)\r\n            setMenuToggle(false)\r\n\r\n            document.querySelector('[data-id=\"dropdown-icon\"]').classList.remove('input-dropdown__icon--menuopened')\r\n            document.querySelector('[data-id=\"dropdown-icon\"]').classList.add('input-dropdown__icon--menuclosed')\r\n\r\n            document.querySelector('.input-dropdown').classList.remove('input-dropdown--menuopened')\r\n            document.querySelector('.input-dropdown').classList.add('input-dropdown--menuclosed')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.getInputValueFromChild(props.name, selection)\r\n    }, [selection, props])\r\n\r\n    return (\r\n        <div className='input-dropdown input-dropdown--menuclosed' onClick={toggleDropdown}>\r\n            <input className='input-dropdown__input' placeholder={props.placeholder} type='text' value={selection} readOnly></input>  \r\n            <img src={icon} className='input-dropdown__icon input-dropdown__icon--menuclosed' alt='Expande menu dropdown' data-id='dropdown-icon'/>\r\n            {menuToggle &&\r\n                <div className='input-dropdown__item-container'>\r\n                    <div className='input-dropdown__item' onClick={() => setSelection('Compra')}>Compra</div>\r\n                    <div className='input-dropdown__item' onClick={() => setSelection('Venda')}>Venda</div>\r\n                </div>\r\n            }\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default InputDropdown","import './ButtonSubmit.css'\r\n\r\nfunction ButtonSubmit(props) {\r\n    const handleClick = () => {\r\n        if(!props.disabled){\r\n            props.getNewOperationFromChild(props.operation)\r\n            props.resetState()\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <button className={`button-submit ${props.disabled ? 'button-submit--disabled' : ''}`} onClick={handleClick}>Registrar</button>\r\n    )\r\n}\r\n\r\nexport default ButtonSubmit","import { useState, useEffect } from 'react'\r\nimport InputDate from '../InputDate/InputDate'\r\nimport InputRegular from '../InputRegular/InputRegular'\r\nimport InputDropdown from '../InputDropdown/InputDropdown'\r\nimport ButtonSubmit from '../ButtonSubmit/ButtonSubmit'\r\n\r\nimport './Form.css'\r\n\r\nfunction Form (props) {\r\n    const [date, setDate] = useState(new Date())\r\n    const [code, setCode] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [quantity, setQuantity] = useState(0)\r\n    const [tax, setTax] = useState(0)\r\n    const [operation, setOperation] = useState({})\r\n    \r\n    const [key, setKey] = useState(0)\r\n\r\n    const getInputValueFromChild = (component, value) => {\r\n        switch(component){\r\n            case 'date':\r\n                setDate(value)\r\n                break\r\n            case 'code':\r\n                setCode(value.toUpperCase())\r\n                break\r\n            case 'type':\r\n                setType(value)\r\n                break\r\n            case 'price':\r\n                setPrice(value)\r\n                break\r\n            case 'quantity':\r\n                setQuantity(value)\r\n                break\r\n            case 'tax':\r\n                setTax(value)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const checkIfInputIsEmpty = () => {\r\n        if(date && code && type && price && quantity && tax){\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    const reRenderChildComponents = () => {\r\n        setKey(key + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const json = {\r\n            id: props.operationId,\r\n            date: date,\r\n            code: code,\r\n            type: type,\r\n            price: price,\r\n            quantity: quantity,\r\n            tax: tax\r\n        }\r\n        setOperation(json)\r\n    }, [props.operationId, date, code, type, price, quantity, tax])\r\n\r\n    return (\r\n        <div className='stock-form'>\r\n            <InputDate name='date' placeholder='Data' getInputValueFromChild={getInputValueFromChild} key={'date' + key}></InputDate>\r\n            <InputRegular name='code' placeholder='Código da ação (ex. GME)' type='text' getInputValueFromChild={getInputValueFromChild} key={'code' + key}></InputRegular>\r\n            <InputDropdown name='type' placeholder='Tipo' getInputValueFromChild={getInputValueFromChild} key={'type' + key}></InputDropdown>\r\n            <InputRegular name='price' placeholder='Preço' type='number' getInputValueFromChild={getInputValueFromChild} key={'price' + key}></InputRegular>\r\n            <InputRegular name='quantity' placeholder='Quantidade' type='number' integer getInputValueFromChild={getInputValueFromChild} key={'quantity' + key}></InputRegular>\r\n            <InputRegular name='tax' placeholder='Taxa' type='number' getInputValueFromChild={getInputValueFromChild} key={'tax' + key}></InputRegular>\r\n            <ButtonSubmit getNewOperationFromChild={props.getNewOperationFromChild} operation={operation} disabled={checkIfInputIsEmpty()} resetState={reRenderChildComponents}></ButtonSubmit>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import './EntriesGroup.css'\r\n\r\nfunction EntriesGroup(props){\r\n\r\n    const handleClick = () => {\r\n        \r\n    }\r\n\r\n    return(\r\n        <div onClick={handleClick}>\r\n            <div className='entries-group'>\r\n                <div className='entries-group__name'>{props.name}</div>\r\n                <div className='entries-group__operation-container'>\r\n                    <span className='entries-group__text'>Número de operações: {props.operationNumber}</span><span className='entries-group__dots'>...</span>\r\n                </div>\r\n            </div>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntriesGroup","import { useState, useRef, useEffect } from 'react'\r\n\r\nimport Chart from 'chart.js'\r\n\r\nimport ArrowDown from '../../FormView/InputDropdown/Icons/expand.svg'\r\nimport ArrowUp from '../../FormView/InputDropdown/Icons/collapse.svg'\r\n\r\nimport './ChartView.css'\r\n\r\nfunction ChartView(props){   \r\n    const [icon, setIcon] = useState(ArrowDown)\r\n    const [currentYear, setCurrentYear] = useState(() => {\r\n        let sortedYears = Object.keys(props.values).sort((a,b) => b-a)\r\n        return sortedYears[0]\r\n    })\r\n    const [chartRatio, setChartRatio] = useState(2)\r\n    const [chart, setChart] = useState(undefined)\r\n    const canvas = useRef(null)\r\n\r\n\r\n    const init = () => {\r\n        setChart(initChart())\r\n        \r\n    }\r\n\r\n    const test = () => {\r\n        if(window.innerWidth > window.innerHeight) {\r\n            if(window.innerWidth > 1800){\r\n                return 2.8\r\n            } else if(window.innerWidth > 1100) {\r\n                return 2.5\r\n            } else {\r\n                return 2\r\n            }\r\n            \r\n        } else {\r\n            if(window.innerWidth > 475){\r\n                return 1.2\r\n            } else {\r\n                return 0.9\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const handleMenuRender = () => {\r\n        let menuOptions = []\r\n        let keys = Object.keys(props.values).sort((a,b) => b-a)\r\n        keys.forEach(year => {\r\n            menuOptions.push(<div className='chart__menu-options' key={year}>{year}</div>)\r\n        })\r\n        return menuOptions\r\n    }\r\n\r\n    const initChart = () => {\r\n        let chartInit = new Chart(canvas.current.getContext('2d'), {\r\n            type: 'bar',\r\n            data: {\r\n                labels: ['JAN', 'FEV', 'MAR', 'ABR', 'MAI', 'JUN', 'JUL', 'AGO', 'SET', 'OUT', 'NOV', 'DEZ'],\r\n                datasets: [{\r\n                    backgroundColor: 'rgba(205, 205, 205, 1)',\r\n                    borderColor: 'rgba(77, 77, 77, 1)',\r\n                    borderWidth: 2,\r\n                    data: props.values[currentYear],\r\n                    fill: false\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n                aspectRatio: test(),\r\n                legend: {\r\n                    display: false\r\n                },\r\n                tooltips: {\r\n                    callbacks: {\r\n                        label: function(tooltipItem){\r\n                            return `R$ ${tooltipItem.yLabel.toFixed(2)}`\r\n                        }\r\n                    }\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            display: false,\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        })\r\n        return chartInit\r\n    }\r\n\r\n    const toggleDropdown = () => {\r\n        if(icon === ArrowDown) {\r\n            setIcon(ArrowUp)\r\n        } else {\r\n            setIcon(ArrowDown)\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    const updateChart = () => {\r\n        chart.data.datasets[0].data = props.values[currentYear]\r\n        chart.options.aspectRatio = chartRatio\r\n        chart.update()\r\n    }\r\n\r\n    useEffect(() => {\r\n        init()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(chart !== undefined) {\r\n            updateChart()\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentYear])\r\n\r\n\r\n    return(\r\n        <div className='chart'>\r\n            <div className='chart__text-container'>\r\n                <div className='chart__name'>{props.name}</div>\r\n                <div className='chart__menu-dropdown' onClick={toggleDropdown}>\r\n                    <div className='chart__menu-button-container'>\r\n                        <img src={icon} className='chart__menu-icon' alt='Expande menu dropdown' data-id='dropdown-icon'/>\r\n                        <button className='chart__menu-text'>ano: {currentYear}</button>\r\n                    </div>\r\n                    {icon === ArrowUp &&\r\n                        <div className='chart__menu-options-container' onClick={(e) => setCurrentYear(e.target.innerHTML)}>\r\n                            {handleMenuRender()}\r\n                        </div>\r\n                    }\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            <canvas id='canvas' ref={canvas}></canvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartView","import { useEffect, useState } from 'react'\r\nimport EntriesGroup from '../../HistoryView/EntriesGroup/EntriesGroup'\r\nimport ChartView from '../ChartView/ChartView'\r\n\r\nimport './Graph.css'\r\n\r\nfunction Graph(props){\r\n    const [currentList, setCurrentList] = useState('')\r\n    const [listSize, setListSize] = useState(0)\r\n    const [salesTax, setSalesTax] = useState([])\r\n\r\n    const getTaxValues = (name) => {\r\n        let years = {}\r\n        \r\n        props.entries[name].forEach(entry => {\r\n            if(years.hasOwnProperty(entry.date.getFullYear())){\r\n                if(entry.type === 'Venda'){\r\n                    years[entry.date.getFullYear()][entry.date.getMonth()] = years[entry.date.getFullYear()][entry.date.getMonth()] + entry.salesTax\r\n                }\r\n            } else {\r\n                years[entry.date.getFullYear()] = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n                if(entry.type === 'Venda'){\r\n                    years[entry.date.getFullYear()][entry.date.getMonth()] = entry.salesTax\r\n                }\r\n            }\r\n        })\r\n        setSalesTax(years)\r\n    }\r\n\r\n    const handleRender = () => {\r\n        let keys = Object.keys(props.entries)\r\n        let render = []\r\n        if(currentList === ''){\r\n            render.push(<div className='graph__message'>Selecione alguma das ações para visualizar um gráfico dos impostos acumulados.</div>)\r\n            keys.forEach(key => {\r\n                render.push(\r\n                    <div onClick={() => {\r\n                        getTaxValues(key)\r\n                        setCurrentList(key)\r\n                        setListSize(props.numberEntries(key))\r\n                        }}>\r\n                        <EntriesGroup key={key} name={key} operationNumber={props.numberEntries(key)}></EntriesGroup>\r\n                    </div>\r\n                )\r\n            })\r\n            return render\r\n        } else if(listSize === 0){\r\n            setCurrentList('')\r\n        } else {\r\n            render.push(<button className='graph__button-back' onClick={() => setCurrentList('')}>voltar</button>)\r\n            render.push(<ChartView key={currentList} name={currentList} values={salesTax}></ChartView>)\r\n            return <div className='graph__detailed-view-container'>{render}</div>\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.activeTab !== 1){\r\n            setCurrentList('')\r\n        }\r\n    }, [props.activeTab])\r\n\r\n    return(\r\n        <div className='graph'>\r\n            {handleRender()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph","export default __webpack_public_path__ + \"static/media/icon-trash.d6b8d28f.svg\";","import TrashIcon from './Icons/icon-trash.svg'\r\nimport './EntriesCard.css'\r\n\r\nfunction EntriesCard(props){\r\n    \r\n    const handleClick = () => {\r\n        props.handleDeletion(props.title, props.id)\r\n    }\r\n\r\n    return(\r\n        <div className='entries-card'>\r\n            <header className='entries-card__header'>\r\n                <span className='entries-card__title'>{props.title}</span>\r\n                <span className='entries-card__date'>{props.date}</span>\r\n            </header>\r\n            <div className='entries-card__type'>{props.type === 'Compra' ? 'Compra' : 'Venda'}</div>\r\n            <div className='entries-card__quantity'>Quantidade: {props.quantity}</div>\r\n            <div className='entries-card__price-tax-container'>\r\n                <span className='entries-card__price'>Valor: R$ {props.price}</span>\r\n                <span className='entries-card__tax'>Taxa: R$ {props.tax}</span>\r\n                {props.type === 'Compra' &&\r\n                    <img className='entries-card__icon entries-card__icon--buy' src={TrashIcon} alt='Ícone de um lixo.' onClick={handleClick}></img>\r\n                }\r\n            </div>\r\n            {props.type === 'Venda' &&\r\n                <div className='entries-card__sell-tax-container'>\r\n                    <div className='entries-card__sell-tax'>Imposto acumulado: R$ {props.salesTax.toFixed(5)}</div>\r\n                    <img className='entries-card__icon entries-card__icon--sell' src={TrashIcon} alt='Ícone de um lixo.' onClick={handleClick}></img>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntriesCard","import { useState } from 'react'\r\nimport EntriesGroup from '../EntriesGroup/EntriesGroup'\r\nimport EntriesCard from '../EntriesCard/EntriesCard'\r\nimport './History.css'\r\n\r\nfunction History(props){\r\n    const [currentList, setCurrentList] = useState('')\r\n    const [listSize, setListSize] = useState(0)\r\n\r\n    const handleRender = () => {\r\n        let keys = Object.keys(props.entries)\r\n        let render = []\r\n        if(currentList === ''){\r\n            render.push(<div className='history__message'>Selecione alguma das ações para visualizar o seu histórico de operações.</div>)\r\n            keys.forEach(key => {\r\n                render.push(\r\n                    <div onClick={() => {\r\n                        setCurrentList(key)\r\n                        setListSize(props.numberEntries(key))\r\n                        }}>\r\n                        <EntriesGroup key={key} name={key} operationNumber={props.numberEntries(key)}></EntriesGroup>\r\n                    </div>\r\n                    \r\n                )\r\n            })\r\n            return render\r\n        } else if(listSize === 0){\r\n            setCurrentList('')\r\n        } else {\r\n            render.push(<button className='history__button-back' onClick={() => setCurrentList('')}>voltar</button>)\r\n            keys.forEach(key => {\r\n                if(key === currentList){\r\n                    props.entries[key].sort((a,b) => b.date-a.date).forEach((op) => {\r\n                        render.push(\r\n                            <EntriesCard\r\n                                id={op.id}\r\n                                title={op.code}\r\n                                date={`${op.date.getDay()}/${op.date.getMonth() + 1}/${op.date.getFullYear()}`}\r\n                                type={op.type}\r\n                                quantity={op.quantity}\r\n                                price={op.price}\r\n                                tax={op.tax}\r\n                                salesTax={op.salesTax}\r\n                                handleDeletion={handleDeletion}\r\n                                key={op.id}>\r\n                            </EntriesCard>\r\n                        )\r\n                    })\r\n                }\r\n            })\r\n            return <div className='history__detailed-view-container'>{render}</div>\r\n        }\r\n    }\r\n\r\n    const handleDeletion = (name, id) => {\r\n        props.removeOperation(name, id)\r\n        setListSize(listSize - 1)\r\n    }\r\n\r\n    return(\r\n        <div className='history'>\r\n            {handleRender()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History","import { useState, useRef } from 'react'\r\nimport EntriesAPI from './EntriesAPI/EntriesAPI'\r\nimport Header from './Header/Header'\r\nimport Menu from './Menu/Menu'\r\nimport DefaultMessage from './DefaultMessage/DefaultMessage'\r\nimport PopupConfirmation from '../FormView/PopupConfirmation/PopupConfirmation'\r\nimport PopupError from '../FormView/PopupError/PopupError'\r\nimport Form from '../FormView/Form/Form'\r\nimport Graph from '../GraphView/Graph/Graph'\r\nimport History from '../HistoryView/History/History'\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\tconst entriesAPI = useRef(new EntriesAPI())\r\n\r\n\tconst [activeTab, setActiveTab] = useState(0)\r\n\tconst [id, setId] = useState(0)\r\n\tconst [numberOfOperations, setNumberOfOperations] = useState(0)\r\n\tconst [toggleConfirmationPopup, setToggleConfirmationPopup] = useState(false)\r\n\tconst [toggleErrorPopup, setToggleErrorPopup] = useState(false)\r\n\tconst [errorMessage, setErrorMessage] = useState('')\r\n\tconst [entries, setEntries] = useState(entriesAPI.current.getAllEntries())\r\n\t\r\n\r\n\tconst getTabSelectionFromChild = (dataFromTabChild) => {\r\n\t\tsetActiveTab(dataFromTabChild)\t\t\r\n\t}\r\n\r\n\tconst getNewOperationFromChild = (dataFromStockFormChild) => {\r\n\r\n\t\tsetId(id + 1)\r\n\r\n\t\ttry{\r\n\t\t\tentriesAPI.current.addNewOperation(dataFromStockFormChild)\r\n\t\t\tsetEntries(entriesAPI.current.getAllEntries())\r\n\t\t\tsetNumberOfOperations(entriesAPI.current.numberOfOperations())\r\n\t\t\tsetToggleConfirmationPopup(true)\r\n\t\t\tsetTimeout(() => {setToggleConfirmationPopup(false)}, 3000)\r\n\t\t} catch(error){\r\n\t\t\tsetErrorMessage(error.message)\r\n\t\t\tsetToggleErrorPopup(true)\r\n\t\t\tsetTimeout(() => {setToggleErrorPopup(false)}, 5000)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tconst removeOperation = (name, id) => {\r\n\t\tentriesAPI.current.removeOperation(name, id)\r\n\t\tentriesAPI.current.print()\r\n\t\tsetNumberOfOperations(entriesAPI.current.numberOfOperations())\r\n\t\tsetEntries(entriesAPI.current.getAllEntries())\r\n\t}\r\n\r\n\tconst getEntryNumber = (name) => {\r\n\t\treturn entriesAPI.current.getStockNumberOfEntries(name)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='app'>\r\n\t\t\t\t<Header></Header>\r\n\t\t\t\t<Menu getTabSelectionFromChild={getTabSelectionFromChild}></Menu>\r\n\t\t\t\t\r\n\t\t\t\t<div className={activeTab === 0 ? '' : 'app__component--hidden'}>\r\n\t\t\t\t\t<div className={toggleConfirmationPopup ? '' : 'app__component--hidden'}>\r\n\t\t\t\t\t\t<PopupConfirmation></PopupConfirmation>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={toggleErrorPopup ? '' : 'app__component--hidden'}>\r\n\t\t\t\t\t\t<PopupError message={errorMessage}></PopupError>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form getNewOperationFromChild={getNewOperationFromChild} operationId={id}></Form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={activeTab === 1 ? '' : 'app__component--hidden'}>\r\n\t\t\t\t\t{numberOfOperations > 0 ? \r\n\t\t\t\t\t\t<Graph entries={entries}\r\n\t\t\t\t\t\tnumberEntries={getEntryNumber}\r\n\t\t\t\t\t\tactiveTab={activeTab}>\r\n\t\t\t\t\t\t</Graph> : <DefaultMessage></DefaultMessage>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={activeTab === 2 ? '' : 'app__component--hidden'}>\r\n\t\t\t\t\t{numberOfOperations > 0 ? \r\n\t\t\t\t\t\t<History entries={entries} \r\n\t\t\t\t\t\tremoveOperation={removeOperation} \r\n\t\t\t\t\t\tnumberEntries={getEntryNumber}>\r\n\t\t\t\t\t\t</History> : <DefaultMessage></DefaultMessage>\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}